# Dynamic Programming

An explanation from ChatGPT. Alright, imagine you have a big puzzle to solve,
but it's too big for you to finish in one go. So, you decide to break it into
smaller puzzles, and you solve each of these small puzzles one by one. But,
here's the clever part: as you solve these small puzzles, you remember the
solutions. That way, if you come across the same small puzzle again, you don't
have to solve it all over again. You already know the answer! Dynamic
programming is like solving a big puzzle by breaking it into smaller ones and
remembering the solutions to the smaller ones to make solving the big puzzle
easier and faster.

## Policy Evaluation (Prediction)

```pseudocode
#| label: alg-test-text-style
#| html-indent-size: "1.2em"
#| html-comment-delimiter: "//"
#| html-line-number: true
#| html-line-number-punc: ":"
#| html-no-end: false
#| pdf-placement: "htb!"
#| pdf-line-number: true

\begin{algorithm}
	\caption{Iterative Policy Evaluation, for estimating $V \approx v_{\pi}$}
	\begin{algorithmic}
		\Require $\pi$, the policy to be evaluated, $\theta$ tolerance precision
		\Ensure $|v- V(s)|< \theta$
		\Procedure{Policy-Evaluation}{$\pi$, $\theta$}
			\State $cond \leftarrow$ True
			\While{cond}
  			\For{$s \in \mathcal{S}$}
  				\State $v \leftarrow V(s)$
  				\State $V(s) \leftarrow \sum_{a}$ 
  			\EndFor
  		\EndWhile
		\EndProcedure
	\end{algorithmic}
\end{algorithm}
```


## Policy Improvement

## Policy Iteration

## Value Iteration

## Asynchronous Dynamic Programming

## Generalized Policy Iteration

## Efficiency of Dynamic Programming

## Summary
